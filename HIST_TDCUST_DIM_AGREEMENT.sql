/* Truncation of the work table */
TRUNCATE TABLE EDW_WORK.TDCUST_DIM_AGREEMENT;

/* Select to capture insert and update records */
INSERT INTO EDW_WORK.TDCUST_DIM_AGREEMENT (DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, AGREEMENT_NR_PFX, AGREEMENT_NR, AGREEMENT_NR_SFX, AGREEMENT_SOURCE_CDE, AGREEMENT_TYPE_CDE, MASTER_CONTRACT_GROUP_ID, SPONSOR_ID, PLAN_ID, SUBSCRIBER_ID, PARTICIPANT_ID, ICU_ID, MASTER_CONTRACT_GROUP_NM_NATIONAL_DESC, PLAN_NM_1_TXT, PLAN_NM_2_TXT, PLAN_NM_3_TXT, SUBSCRIBER_NR, AGREEMENT_STATUS_CDE, AGREEMENT_STATUS_REASON_CDE, ALLOW_ROLLOVER_IND, APPLICATION_SUBMIT_DT, BENEFICIARIES_RECORDED_IND, CONVERSION_EXPIRED_IND, CONVERSION_ELIGIBILITY_START_DT, CONVERSION_ELIGIBILITY_END_DT, DEFAULT_VOLUNTARY_DEFERRAL_RT, ENROLLMENT_DT, ENROLLMENT_ELIGIBILITY_DT, ENROLLMENT_START_DT, ENROLLMENT_END_DT, ENROLLMENT_STATUS_CDE, ENROLLMENT_TYPE_CDE, FACE_AMT, INTERNAL_PLAN_ID, ISSUE_DT, PARTICIPATION_DT, SOLICITATION_DT, SOLICITATION_IND, TAFT_HARTLY_IND, ELECTRONIC_CONTRIBUTION_CHANGE_IND, PRE_TAX_AUTO_INCREASE_CONTRIBUTION_RT,
	BEGIN_DT, BEGIN_DTM, ROW_PROCESS_DTM, AUDIT_ID, LOGICAL_DELETE_IND, CHECK_SUM, END_DT, END_DTM, SOURCE_SYSTEM_ID, RESTRICTED_ROW_IND, CURRENT_ROW_IND)
SELECT DRVD.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, DRVD.AGREEMENT_NR_PFX, DRVD.AGREEMENT_NR, DRVD.AGREEMENT_NR_SFX, DRVD.AGREEMENT_SOURCE_CDE, DRVD.AGREEMENT_TYPE_CDE, DRVD.MASTER_CONTRACT_GROUP_ID, DRVD.SPONSOR_ID, DRVD.PLAN_ID, DRVD.SUBSCRIBER_ID, DRVD.PARTICIPANT_ID, DRVD.ICU_ID, DRVD.MASTER_CONTRACT_GROUP_NM_NATIONAL_DESC, DRVD.PLAN_NM_1_TXT, DRVD.PLAN_NM_2_TXT, DRVD.PLAN_NM_3_TXT, DRVD.SUBSCRIBER_NM, DRVD.AGREEMENT_STATUS_CDE, DRVD.AGREEMENT_STATUS_REASON_CDE, DRVD.ALLOW_ROLLOVER_IND, DRVD.APPLICATION_SUBMIT_DT, DRVD.BENEFICIARIES_RECORDED_IND, DRVD.CONVERSION_EXPIRED_IND, DRVD.CONVERSION_ELIGIBILITY_START_DT, DRVD.CONVERSION_ELIGIBILITY_END_DT, DRVD.DEFAULT_VOLUNTARY_DEFERRAL_RT, DRVD.ENROLLMENT_DT, DRVD.ENROLLMENT_ELIGIBILITY_DT, DRVD.ENROLLMENT_START_DT, DRVD.ENROLLMENT_END_DT, DRVD.ENROLLMENT_STATUS_CDE, DRVD.ENROLLMENT_TYPE_CDE, DRVD.FACE_AMT, DRVD.INTERNAL_PLAN_ID, DRVD.ISSUE_DT AS ISSUE_DT, DRVD.PARTICIPATION_DT, DRVD.SOLICITATION_DT, DRVD.SOLICITATION_IND, DRVD.TAFT_HARTLY_IND, DRVD.ELECTRONIC_CONTRIBUTION_CHANGE_IND, DRVD.PRE_TAX_AUTO_INCREASE_CONTRIBUTION_RT,
	DRVD.BEGIN_DT, DRVD.BEGIN_DTM, CURRENT_TIMESTAMP as ROW_PROCESS_DTM, DRVD.AUDIT_ID, DRVD.LOGICAL_DELETE_IND, DRVD.CHECK_SUM, DRVD.END_DT, DRVD.END_DTM, DRVD.SOURCE_SYSTEM_ID, DRVD.RESTRICTED_ROW_IND
	, CASE WHEN ROW_NUMBER() OVER (PARTITION BY DRVD.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID ORDER BY DRVD.END_DTM desc, DRVD.END_DT desc) = 1 and DRVD.END_DT = '9999-12-31' THEN 'T' ELSE 'F' END::BOOLEAN AS CURRENT_ROW_IND
FROM (SELECT DISTINCT uuid_gen(PREHASH_VALUE(CLEAN_STRING(HLDG_KEY_PFX), CLEAN_STRING(HLDG_KEY), CLEAN_STRING(HLDG_KEY_SFX), CLEAN_STRING(AGREEMENT_SOURCE_CD), CLEAN_STRING('IPA')))::UUID AS DIM_AGREEMENT_NATURAL_KEY_HASH_UUID
		, CLEAN_STRING(HLDG_KEY_PFX)  AS AGREEMENT_NR_PFX
		, CLEAN_STRING(HLDG_KEY)  AS AGREEMENT_NR
		, CLEAN_STRING(HLDG_KEY_SFX) AS AGREEMENT_NR_SFX
		, CLEAN_STRING(AGREEMENT_SOURCE_CD) AS AGREEMENT_SOURCE_CDE
		, CLEAN_STRING('IPA') AS AGREEMENT_TYPE_CDE

		, CLEAN_STRING('') as MASTER_CONTRACT_GROUP_ID
		, CLEAN_STRING('') as SPONSOR_ID
		, CLEAN_STRING('') as PLAN_ID
		, CLEAN_STRING('') as SUBSCRIBER_ID
		, CLEAN_STRING('') as PARTICIPANT_ID
		, CLEAN_STRING('') as ICU_ID
		, CLEAN_STRING('') as MASTER_CONTRACT_GROUP_NM_NATIONAL_DESC
		, CLEAN_STRING('') as PLAN_NM_1_TXT
		, CLEAN_STRING('') as PLAN_NM_2_TXT
		, CLEAN_STRING('') as PLAN_NM_3_TXT
		, CLEAN_STRING('') as SUBSCRIBER_NM
		, CLEAN_STRING(HLDG_STUS) AS AGREEMENT_STATUS_CDE
		, CLEAN_STRING(STUS_RSN) AS AGREEMENT_STATUS_REASON_CDE
		, NULL as ALLOW_ROLLOVER_IND
		, NULL as APPLICATION_SUBMIT_DT
		, NULL as BENEFICIARIES_RECORDED_IND
		, (CASE WHEN CONVERSION_END_DATE < CURRENT_DATE THEN 'T' ELSE 'F' END)::BOOLEAN  AS CONVERSION_EXPIRED_IND
		, CONVERSION_START_DATE AS CONVERSION_ELIGIBILITY_START_DT
		, CONVERSION_START_DATE AS CONVERSION_ELIGIBILITY_END_DT
		, NULL as DEFAULT_VOLUNTARY_DEFERRAL_RT
		, NULL as ENROLLMENT_DT
		, NULL as ENROLLMENT_ELIGIBILITY_DT
		, NULL as ENROLLMENT_START_DT
		, NULL as ENROLLMENT_END_DT
		, CLEAN_STRING('') as ENROLLMENT_STATUS_CDE
		, CLEAN_STRING('') as ENROLLMENT_TYPE_CDE
		, FACE_AMOUNT AS FACE_AMT
		, CLEAN_STRING('') as INTERNAL_PLAN_ID
		, ISSUE_DT AS ISSUE_DT
		, NULL as PARTICIPATION_DT
		, NULL as SOLICITATION_DT
		, NULL as SOLICITATION_IND
		, NULL as TAFT_HARTLY_IND
		, NULL as ELECTRONIC_CONTRIBUTION_CHANGE_IND
		, NULL as PRE_TAX_AUTO_INCREASE_CONTRIBUTION_RT
		, HASH_GEN(PREHASH_VALUE( CLEAN_STRING(''), CLEAN_STRING(''), CLEAN_STRING(''), CLEAN_STRING(''), CLEAN_STRING(''), CLEAN_STRING(''), CLEAN_STRING(''), CLEAN_STRING(''), CLEAN_STRING(''), CLEAN_STRING(''), CLEAN_STRING(''), CLEAN_STRING(HLDG_STUS), CLEAN_STRING(STUS_RSN), NULL, NULL, NULL, (CASE WHEN CONVERSION_END_DATE < CURRENT_DATE THEN 'T' ELSE 'F' END)::boolean::varchar(5), CONVERSION_START_DATE::varchar(10), CONVERSION_START_DATE::varchar(10), NULL, NULL, NULL, NULL, NULL, CLEAN_STRING(''), CLEAN_STRING(''), FACE_AMOUNT::varchar(20), CLEAN_STRING(''), ISSUE_DT::varchar(10), NULL, NULL, NULL, NULL, NULL, NULL))::UUID as CHECK_SUM
		, ADT.audit_id as AUDIT_ID
		, '205' as SOURCE_SYSTEM_ID
		, 'F'::boolean as RESTRICTED_ROW_IND
		, 'F'::boolean as LOGICAL_DELETE_IND
		, AGMT_HIST_FR_DT::timestamp as BEGIN_DTM
		, AGMT_HIST_FR_DT::date as BEGIN_DT
		, AGMT_HIST_TO_DT::timestamp as END_DTM
		, AGMT_HIST_TO_DT::date as END_DT

	FROM TERADATA_HIST.AGMT_HIST_VW

	LEFT JOIN edw_audit.etl_batch_audit_vw ADT
	ON ADT.record_aligner = 1
	and ADT.batch_name = 'Customer_to_CIP') DRVD

LEFT JOIN (SELECT DIM_AGREEMENT_NATURAL_KEY_HASH_UUID::UUID AS DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, END_DT, CURRENT_ROW_IND, CHECK_SUM::UUID AS CHECK_SUM
	FROM EDW_WORK.TDCUST_DIM_AGREEMENT) TGT
ON TGT.CURRENT_ROW_IND= TRUE
AND TGT.END_DT='9999-12-31'
AND TGT.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID = DRVD.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID

WHERE CASE WHEN TGT.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID IS NULL THEN 'I'
	WHEN TGT.CHECK_SUM <> DRVD.CHECK_SUM THEN 'U'
	ELSE 'D' END IN ('I','U');
